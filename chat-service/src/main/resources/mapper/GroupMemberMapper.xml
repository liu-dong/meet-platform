<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dong.chat.web.mapper.GroupMemberMapper">

    <resultMap id="BaseResultMap" type="com.dong.chat.web.domain.GroupMember">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="groupId" column="group_id" jdbcType="VARCHAR"/>
        <result property="memberName" column="member_name" jdbcType="VARCHAR"/>
        <result property="memberId" column="member_id" jdbcType="VARCHAR"/>
        <result property="groupPosition" column="group_position" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,group_id,member_name,
        member_id,group_position,remark,
        is_delete,create_time,create_user_id,
        update_time,update_user_id
    </sql>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.dong.chat.web.domain.GroupMember" useGeneratedKeys="true">
        insert into group_member
        ( id,group_id,member_name
        ,member_id,group_position,remark
        ,is_delete,create_time,create_user_id
        ,update_time,update_user_id)
        values (#{id,jdbcType=VARCHAR},#{groupId,jdbcType=VARCHAR},#{memberName,jdbcType=VARCHAR}
               ,#{memberId,jdbcType=VARCHAR},#{groupPosition,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR}
               ,#{isDelete,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{createUserId,jdbcType=VARCHAR}
               ,#{updateTime,jdbcType=TIMESTAMP},#{updateUserId,jdbcType=VARCHAR})
    </insert>
    <update id="update" parameterType="com.dong.chat.web.domain.GroupMember">
        update group_member
        set
        <if test="groupId != null">
            group_id = #{groupId,jdbcType=VARCHAR},
        </if>
        <if test="memberName != null">
            member_name = #{memberName,jdbcType=VARCHAR},
        </if>
        <if test="memberId != null">
            member_id = #{memberId,jdbcType=VARCHAR},
        </if>
        <if test="groupPosition != null">
            group_position = #{groupPosition,jdbcType=VARCHAR},
        </if>
        <if test="remark != null">
            remark = #{remark,jdbcType=VARCHAR},
        </if>
        <if test="isDelete != null">
            is_delete = #{isDelete,jdbcType=INTEGER},
        </if>
        <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="createUserId != null">
            create_user_id = #{createUserId,jdbcType=VARCHAR},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateUserId != null">
            update_user_id = #{updateUserId,jdbcType=VARCHAR},
        </if>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from group_member
        where  id = #{id,jdbcType=VARCHAR}
    </delete>
    <select id="findGroupMemberList" resultType="com.dong.chat.web.model.vo.GroupMemberVO" resultSets="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from group_member
        <where>
            <if test="groupId != null">
                and group_id = #{groupId,jdbcType=VARCHAR},
            </if>
            <if test="memberName != null">
                and member_name = #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                and member_id = #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="groupPosition != null">
                and group_position = #{groupPosition,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                and remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                and create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                and update_user_id = #{updateUserId,jdbcType=VARCHAR},
            </if>
        </where>

        limit #{(page-1)*size},#{size}
    </select>
    <select id="getTotal" resultType="java.lang.Integer">
        select count(*) from group_member
        where is_delete = 0
        <if test="groupId != null">
            and group_id = #{groupId,jdbcType=VARCHAR},
        </if>
        <if test="memberName != null">
            and member_name = #{memberName,jdbcType=VARCHAR},
        </if>
        <if test="memberId != null">
            and member_id = #{memberId,jdbcType=VARCHAR},
        </if>
        <if test="groupPosition != null">
            and group_position = #{groupPosition,jdbcType=VARCHAR},
        </if>
        <if test="remark != null">
            and remark = #{remark,jdbcType=VARCHAR},
        </if>
        <if test="isDelete != null">
            and is_delete = #{isDelete,jdbcType=INTEGER},
        </if>
        <if test="createTime != null">
            and create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="createUserId != null">
            and create_user_id = #{createUserId,jdbcType=VARCHAR},
        </if>
        <if test="updateTime != null">
            and update_time = #{updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateUserId != null">
            and update_user_id = #{updateUserId,jdbcType=VARCHAR},
        </if>
    </select>
    <select id="getById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from group_member
        where  id = #{id,jdbcType=VARCHAR}
    </select>
</mapper>
